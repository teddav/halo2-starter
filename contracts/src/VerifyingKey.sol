// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

contract Halo2VerifyingKey {
    constructor() {
        assembly {
            mstore(0x0000, 0x25970d73ab179f2e731163684e9e314b390e1b5f64c5bdeb24b15bb1729f8eff) // vk_digest
            mstore(0x0020, 0x0000000000000000000000000000000000000000000000000000000000000001) // num_instances
            mstore(0x0040, 0x0000000000000000000000000000000000000000000000000000000000000004) // k
            mstore(0x0060, 0x2d5e098bb31e86271ccb415b196942d755b0a9c3f21dd9882fa3d63ab1000001) // n_inv
            mstore(0x0080, 0x21082ca216cbbf4e1c6e4f4594dd508c996dfbe1174efb98b11509c6e306460b) // omega
            mstore(0x00a0, 0x02e40daf409556c02bfc85eb303402b774954d30aeb0337eb85a71e6373428de) // omega_inv
            mstore(0x00c0, 0x0530d09118705106cbb4a786ead16926d5d174e181a26686af5448492e42a181) // omega_inv_to_l
            mstore(0x00e0, 0x0000000000000000000000000000000000000000000000000000000000000000) // has_accumulator
            mstore(0x0100, 0x0000000000000000000000000000000000000000000000000000000000000000) // acc_offset
            mstore(0x0120, 0x0000000000000000000000000000000000000000000000000000000000000000) // num_acc_limbs
            mstore(0x0140, 0x0000000000000000000000000000000000000000000000000000000000000000) // num_acc_limb_bits
            mstore(0x0160, 0x0000000000000000000000000000000000000000000000000000000000000001) // g1_x
            mstore(0x0180, 0x0000000000000000000000000000000000000000000000000000000000000002) // g1_y
            mstore(0x01a0, 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2) // g2_x_1
            mstore(0x01c0, 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed) // g2_x_2
            mstore(0x01e0, 0x090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b) // g2_y_1
            mstore(0x0200, 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa) // g2_y_2
            mstore(0x0220, 0x26186a2d65ee4d2f9c9a5b91f86597d35f192cd120caf7e935d8443d1938e23d) // neg_s_g2_x_1
            mstore(0x0240, 0x30441fd1b5d3370482c42152a8899027716989a6996c2535bc9f7fee8aaef79e) // neg_s_g2_x_2
            mstore(0x0260, 0x16f363f103c80d7bbc8ad3c6867e0822bbc6000be91a4689755c7df40221c145) // neg_s_g2_y_1
            mstore(0x0280, 0x2b1cbb3e521edf5a622d82762a44a5e63f1e50b332d71154a4a7958d6011deff) // neg_s_g2_y_2
            mstore(0x02a0, 0x1a7f62aff3d0ed9d1d17672658d97a268910c215568acc58a168a6dc969b7a77) // fixed_comms[0].x
            mstore(0x02c0, 0x14dfaa72608de0b2c185db003a75dca122ac874e81a314dc8894ed068760cd49) // fixed_comms[0].y
            mstore(0x02e0, 0x0f744101d902fa1a7ace05c2af8bcefde61d6c95c791ebc451ef9ca46da2f35e) // fixed_comms[1].x
            mstore(0x0300, 0x2a83462cd652adb43b9ac0edcd691d84f404e27fc818bf7c62b62ae5d8c1b682) // fixed_comms[1].y
            mstore(0x0320, 0x237aa00f34ec91b2f70388452d83ab5780a184202a4f17e3f0cf638e394696f5) // permutation_comms[0].x
            mstore(0x0340, 0x2141b80ceab77ae5218c2dbfd70c2e143d6242c6fa1e96cf52a1c63fcb233862) // permutation_comms[0].y
            mstore(0x0360, 0x03e7ceecc8791ea2282c7cc40de3b68cb16460f423f2b170ff9abaae2b318d71) // permutation_comms[1].x
            mstore(0x0380, 0x1f948a07c086f4341c8a3b39eb652157ec9b81bb5510c76250f52c3dc721f652) // permutation_comms[1].y

            return(0, 0x03a0)
        }
    }
}